@rendermode InteractiveServer

<FluentTabs ActiveTabId="game-details" Id="game-details-tab">
    <CascadingValue Value="this" Name="GameTabs">

        <FluentTab id="game-details" Label="Details">
            <Content>
                <div class="game-details">
                    @if(GameDetails != null)
                    {
                        <SideImage ImagePaths=@GameDetails.ImagePath Name=@GameDetails.Name />

                        <StandardContent Title=@GameDetails.Name Description=@GameDetails.Description />   
                    }
                </div>
            </Content>
        </FluentTab>

        @if(Locations != null && Locations.Count() > 0)
        {
            <FluentTab id="game-locations" Label="Locations">
                <Content>
                    <div class="locations">
                        <h2>Locations</h2>
                        <LocationCards GameId=@GameDetails!.Id Locations=@Locations SearchTerm="@SearchTerm" />
                    </div>
                </Content>
            </FluentTab>
        }

        @if(Characters != null && Characters.Count() > 0)
        {
            <FluentTab id="game-characters" Label="Characters">
                <Content>
                    <div class="characters">
                        <h2>Characters</h2>
                        <CharacterCards GameId=@GameDetails!.Id Characters=@Characters SearchTerm="@SearchTerm" />
                    </div>
                </Content>
            </FluentTab>
        }


        @if(Items != null && Items.Count() > 0)
        {
            <FluentTab id="game-items" Label="Items">
                <Content>
                    <div class="game-items">
                        <h2>Items</h2>
                        <ItemCards GameId=@GameDetails!.Id Items=@Items SearchTerm="@SearchTerm" />
                    </div>
                </Content>
            </FluentTab>
        }
    </CascadingValue>
</FluentTabs>

@code {
    [Parameter]
    public Game? GameDetails { get; set; }
    
    [Parameter]
    public Dictionary<string, GameIndexItem>? Characters { get; set; }
    
    [Parameter]
    public Dictionary<string, GameIndexItem>? Locations { get; set; }
    
    [Parameter]
    public Dictionary<string, GameIndexItem>? Items { get; set; }

    [Parameter]
    public string? SearchTerm { get; set; } = string.Empty;
}