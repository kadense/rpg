@rendermode InteractiveServer
@using Kadense.RPG.DataAccess;

@if(Characters != null)
{
    <div class="character-cards">
        @foreach(var character in Characters.ToList().Where(i => i.Value.Name.ToLowerInvariant().Contains(SearchTerm.ToLowerInvariant())).OrderBy(i => i.Value.Name))
        {
            <CharacterCard Character=@character.Value GameId=@GameId CharacterId=@character.Key />
        }
    </div>
}
@code {
    [Parameter]
    public Dictionary<string, GameIndexItem>? Characters { get; set; }
        
    [Parameter]
    public string SearchTerm { get; set; } = "";

    [Parameter]
    public string? GameId { get;set; }

    protected override async Task OnInitializedAsync()
    {
        if(Characters == null)
        {
            var client = new DataConnectionClient();
            Characters = await client.ReadGameCharacterIndexAsync(GameId);
        }   
    }
}