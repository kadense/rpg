@page "/games/{GameId}/items/{ItemId}"
@using Kadense.RPG.Website
@using System.Text.Encodings.Web
@using website.Components.Layout
@using Microsoft.AspNetCore

<a href="/games/@GameId">&lt;&lt; Back to @GameDetails!.Name</a>

<div class="location-details">
@if(GameDetails != null && ItemDetails != null)
{
    <PageTitle>@GameDetails.Name - @ItemDetails.Name</PageTitle>
    
    <SideImage ImagePaths=@ItemDetails.ImagePath Name=@ItemDetails.Name />
    
    <Content Title=@ItemDetails.Name Description=@ItemDetails.Description />
}

@if(ItemDetails!.Attachments.Count() > 0)
{
    <div class="attachments">
        <h2>Attachments</h2>
        <table>
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
            @foreach(var attachment in ItemDetails.Attachments)
            {
                <tr>
                    <td><a href=@attachment.Path>@attachment.Name</a></td>
                    <td>@(attachment.Description ?? "")</td>
                    <td><a href="javascript:CopyUrlToClipboard('@attachment.Path')">Copy URL</a></td>
                </tr>
            }
            </tbody>
        </table>
    </div>
}
</div>
    
@if(Characters != null && Characters.Count() > 0)
{
    <div class="characters">
        <h2>Characters</h2>
        <CharacterCards GameId=@GameDetails!.Id Characters=@Characters />
    </div>
}
    
@if(Locations != null && Locations.Count() > 0)
{
    <div class="locations">
        <h2>Locations</h2>
        <LocationCards GameId=@GameDetails!.Id Locations=@Locations />
    </div>
}


@code
{
    [Parameter]
    public string? GameId { get; set; }

    [Parameter]
    public string? ItemId { get; set; }

    public Game? GameDetails { get; set; }

    public GameItem? ItemDetails { get; set; }

    public List<GameCharacter>? Characters { get; set; }
    public List<GameLocation>? Locations { get; set; }

    protected override Task OnInitializedAsync()
    {
        GameDetails = GamesExample.GetGames().Where(g => g.Id == GameId!).First();
        ItemDetails = GameDetails.Items.Where(l => l.Id == ItemId).First();
        Characters = GameDetails.GetCharactersForItem(ItemId!);
        Locations = GameDetails.GetLocationsForItem(ItemId!);
        return Task.CompletedTask;
    }
}
